name: CMake Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        include:
          - os: ubuntu-latest
            install_cmd: sudo apt-get update && sudo apt-get install -y libsdl3-dev
          - os: windows-latest
            install_cmd: |
              # Download and extract SDL3 for Windows
              curl -L -o sdl3.zip https://github.com/libsdl-org/SDL/releases/download/release-3.0.0/SDL3-devel-3.0.0-VC.zip
              7z x sdl3.zip -oC:\SDL3
              echo "SDL3_ROOT=C:\SDL3" >> $env:GITHUB_ENV
          - os: macos-latest
            install_cmd: brew install sdl3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install SDL3 dependencies
      run: ${{ matrix.install_cmd }}

    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DSDL3_ROOT="${{ matrix.os == 'windows-latest' && 'C:/SDL3' || '' }}"

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: Run basic test (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        # Check if executable exists and can run
        if [ -f build/JetRacerDemo ]; then
          echo "Executable built successfully"
          # Test that it doesn't crash immediately
          timeout 5s build/JetRacerDemo --help || true
        fi

    - name: Run basic test (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Check if executable exists
        if exist build\Release\JetRacerDemo.exe (
          echo "Executable built successfully"
          # Copy SDL3.dll for testing
          copy C:\SDL3\lib\x64\SDL3.dll build\Release\
          # Test that it doesn't crash immediately
          build\Release\JetRacerDemo.exe --help || echo "Test completed"
        )

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: JetRacerDemo-${{ matrix.os }}-${{ matrix.build_type }}
        path: |
          build/JetRacerDemo*
          build/*/JetRacerDemo*
          build/*/*/JetRacerDemo*
